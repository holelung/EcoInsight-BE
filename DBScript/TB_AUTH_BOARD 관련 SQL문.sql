SELECT * FROM TB_BOARD_TYPE;
SELECT * FROM TB_COMMUNITY_BOARD;
SELECT * FROM TB_MEMBER;
SELECT * FROM TB_AUTH_BOARD ;



-- 이건 인증 카테고리 테이블
CREATE TABLE TB_AUTH_TYPE(
CATEGORY_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
CATEGORY_NAME VARCHAR(20) NOT NULL
);


-- 이건 인증게시판 메인테이블
CREATE TABLE TB_AUTH_BOARD (
  BOARD_NO     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  MEMBER_NO         NUMBER               NOT NULL,
  CATEGORY_ID  NUMBER               NOT NULL,
  BOARD_TITLE     VARCHAR2(200)        NOT NULL,
  BOARD_CONTENT   VARCHAR2(4000)       NOT NULL,
  CREATED_DATE      DATE      DEFAULT SYSDATE NOT NULL,
  MODIFIED_DATE     DATE,
  VIEW_COUNT        NUMBER    DEFAULT 0       NOT NULL,
  IS_DELETED        CHAR(1)   DEFAULT 'N'     NOT NULL
    CONSTRAINT CHK_TB_AUTH_BOARD_DELETED CHECK (IS_DELETED IN ('Y','N')),

  CONSTRAINT FK_TB_AUTH_BOARD_MEMBER   FOREIGN KEY (MEMBER_NO)        REFERENCES TB_MEMBER(MEMBER_NO),
  CONSTRAINT FK_TB_AUTH_BOARD_TYPE     FOREIGN KEY (CATEGORY_ID) REFERENCES TB_AUTH_TYPE(CATEGORY_ID)
);

DROP TABLE TB_AUTH_BOARD;
DROP TABLE TB_AUTH_TYPE;
DROP TABLE TB_AUTH_COMMENT;
DROP TABLE TB_AUTH_ATTACHMENT_IMG;
DROP TABLE TB_AUTH_RECOMMEND;

COMMIT;

SELECT * FROM TB_AUTH_TYPE;
SELECT * FROM TB_AUTH_BOARD;

-----------------------------------------


-- 이건 인증게시판 첨부파일 테이블


SELECT * FROM TB_AUTH_ATTACHMENT_IMG;
SELECT * FROM TB_AUTH_COMMENT;




-- 이건 인증게시판 댓글 테이블
CREATE TABLE TB_AUTH_COMMENT (
  COMMENT_NO  NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  BOARD_NO    NUMBER               NOT NULL,
  MEMBER_NO        NUMBER               NOT NULL,
  COMMENT_CONTENT     VARCHAR2(1000)       NOT NULL,
  PARENT_COMMENT_NO    NUMBER,
  CREATED_DATE     DATE      DEFAULT SYSDATE NOT NULL,
  MODIFIED_DATE    DATE,
  IS_DELETED           CHAR(1)   DEFAULT 'N'     NOT NULL
  CONSTRAINT CHK_TB_AUTH_COMMENT_BOARD_DELETED CHECK (IS_DELETED IN ('Y','N')),

  CONSTRAINT FK_TB_AUTH_COMMENT_BOARD  FOREIGN KEY (BOARD_NO)  REFERENCES TB_AUTH_BOARD(BOARD_NO),
  CONSTRAINT FK_TB_AUTH_COMMENT_MEMBER FOREIGN KEY (MEMBER_NO)      REFERENCES TB_MEMBER(MEMBER_NO),
  CONSTRAINT FK_TB_AUTH_COMMENT_PARENT FOREIGN KEY (PARENT_COMMENT_NO)  REFERENCES TB_AUTH_COMMENT(COMMENT_NO)
);

SELECT * FROM TB_NOTICE ;
COMMIT;




ALTER TABLE TB_NOTICE 
  MODIFY (MODIFIED_DATE DATE DEFAULT SYSDATE NOT NULL);

-- 이건 인증게시판 추천 테이블 
CREATE TABLE TB_AUTH_RECOMMEND (
  BOARD_NO NUMBER NOT NULL,
  MEMBER_NO     NUMBER NOT NULL,

  CONSTRAINT PK_TB_AUTH_RECOMMEND   PRIMARY KEY (BOARD_NO, MEMBER_NO),
  CONSTRAINT FK_TB_AUTH_RECOMMEND_BOARD  FOREIGN KEY (BOARD_NO) REFERENCES TB_AUTH_BOARD(BOARD_NO),
  CONSTRAINT FK_TB_AUTH_RECOMMEND_MEMBER FOREIGN KEY (MEMBER_NO)     REFERENCES TB_MEMBER(MEMBER_NO)
);

ROLLBACK;



SELECT * FROM TB_MEMBER;


SELECT * FROM TB_AUTH_BOARD;
SELECT * FROM TB_AUTH_ATTACHMENT_IMG;
SELECT * FROM TB_AUTH_RECOMMEND;
SELECT * FROM TB_AUTH_TYPE;
SELECT * FROM TB_AUTH_COMMENT;
 
COMMIT;



------- 수정사항있으면 시원하게 DROP하셔도 좋습니다 --------

-- COMMUNITY ATTACHMENT TABLE
CREATE TABLE TB_COMMUNITY_ATTACHMENT_IMG (
  COMMUNITY_ATTACHMENT_NO  NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  BOARD_NO NUMBER NOT NULL,
  ATTACHMENT_ITEM VARCHAR2(300) NOT NULL,
  CONSTRAINT FK_TB_COMMUNITY_ATTACH_BOARD FOREIGN KEY (BOARD_NO) REFERENCES TB_COMMUNITY_BOARD(C_BOARD_NO) ON DELETE CASCADE
);



----------------------------------
-- xml TEST -> 

SELECT * FROM TB_GRADE ;

SELECT * FROM TB_POINT ;
INSERT INTO TB_GRADE 

SELECT MEMBER_ID, MEMBER_NAME , MEMBER_NO, MEMBER_GRADE
FROM TB_MEMBER ;

SELECT
    M.MEMBER_NAME memberName, 
    M.MEMBER_ID memberId, 
    g.GRADE_NAME grade, 
    M.MEMBER_ENROLL_DATE enrollDate, 
    NVL(
      ( SELECT SUM(p.CHANGE_POINT) 
        FROM TB_POINT p
        WHERE p.MEMBER_NO = m.MEMBER_NO
      ), 0
    ) point 
  FROM TB_MEMBER m
  LEFT JOIN TB_GRADE g
    ON m.GRADE_NO = g.GRADE_NO
  WHERE m.MEMBER_ID = 'admin01';


COMMIT;

SELECT * FROM TB_MEMBER ;
SELECT * FROM TB_GRADE ;

SELECT * FROM TB_POINT ;

INSERT INTO TB_POINT (MEMBER_NO, CHANGE_POINT) VALUES('1','1000');


SELECT * FROM TB_AUTH_BOARD ;

SELECT * FROM TB_COMMUNITY_BOARD ;


SELECT * FROM TB_NOTICE ;
----------------------------------
-- XML -> 프로필수정 SQL문

COMMIT;

SELECT 
		MEMBER_NO memberNo, 
		MEMBER_PW memberPW, 
		MEMBER_NAME memberName, 
		MEMBER_ID memberId, 
		MEMBER_PH memberPh, 
		EMAIL email
FROM TB_MEMBER;

SELECT * FROM TB_MEMBER ;

SELECT * FROM TB_COMMUNITY_BOARD ;

